{"version":3,"sources":["logo.svg","images/tasklogo.png","users/Login.js","tasks/TaskCreator.js","tasks/TaskCard.js","tasks/LeftDrawer.js","tasks/Tasks.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Login","props","className","Card","CardMedia","image","LoginPhoto","title","component","action","Grid","container","direction","justify","alignItems","FormControl","TextField","fullWidth","label","variant","type","Button","React","Component","TaskCreator","state","open","Dialog","this","onClose","DialogTitle","DialogContent","onSubmit","handleTaskSubmit","Divider","InputLabel","htmlFor","Select","native","inputProps","name","id","value","TaskCard","CardContent","Typography","color","gutterBottom","task","description","status","responsible","Date","duaDate","toString","LeftDrawer","close","bind","e","console","log","toggleDrawer","classes","Fragment","Drawer","Avatar","alt","src","IconButton","onClick","style","position","top","margin","ListItem","Link","to","large","withStyles","theme","width","spacing","height","Tasks","event","key","setState","drawerOpen","preventDefault","newTask","target","email","dueDate","now","prevState","tasks","concat","dialogOpen","handleDrawerClose","handleDrawerOpen","handleDialogClose","taskList","map","i","CssBaseline","AppBar","Toolbar","edge","aria-label","Fab","LoginView","TasksView","App","Switch","Route","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","process","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.69ea29d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/tasklogo.2a18b5c4.png\";","import React from 'react';\r\nimport { Button, Card, CardMedia, FormControl, TextField, Grid } from '@material-ui/core';\r\nimport './Login.css';\r\nimport LoginPhoto from \"../images/tasklogo.png\";\r\nimport { Link } from 'react-router-dom'\r\nclass Login extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"outer\">\r\n                <div className=\"middle\">\r\n                    <div className=\"inner\">\r\n\r\n                        <Card className=\"card\">\r\n\r\n                            <CardMedia className=\"cardMedia\"\r\n                                image={LoginPhoto}\r\n                                title=\"Task Planner\"\r\n                                component=\"img\"\r\n                            />\r\n                            <form action=\"/tasks\">\r\n                                <div>\r\n                                    <Grid container\r\n                                        direction=\"column\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"center\"\r\n                                        >\r\n                                        <Grid container justify=\"center\">\r\n                                            <FormControl className=\"textField\">\r\n\r\n                                                <TextField fullWidth label=\"Usuario\" variant=\"filled\" />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n\r\n                                        <Grid container justify=\"center\">\r\n                                            <FormControl className=\"textField\">\r\n\r\n                                                <TextField fullWidth label=\"Contraseña\" variant=\"filled\" type=\"password\" />\r\n                                            </FormControl>\r\n                                        </Grid>\r\n\r\n                                        <Grid container justify=\"center\">\r\n                                            <Button className=\"button\" variant=\"outlined\" type=\"submit\">\r\n                                                Log In\r\n                                            </Button>\r\n                                        </Grid>\r\n\r\n                                        {/*<Link>Create Account</Link>*/}\r\n\r\n                                    </Grid>\r\n\r\n                                </div>\r\n\r\n                            </form>\r\n\r\n\r\n\r\n                        </Card>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Button, Dialog, DialogTitle, TextField, Divider, DialogContent, InputLabel } from '@material-ui/core';\r\nimport \"./Tasks.css\"\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nclass TaskCreator extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {open: false}\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Dialog fullWidth open={this.props.open} onClose={this.props.onClose}>\r\n                    <DialogTitle >Add Task</DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.props.handleTaskSubmit}>\r\n                            <TextField fullWidth label=\"Description\" variant=\"filled\"></TextField>\r\n                            <Divider></Divider>\r\n                            <TextField fullWidth label=\"Responsable\" variant=\"filled\"></TextField>\r\n                            <Divider></Divider>\r\n                            <TextField fullWidth label=\"Correo\" variant=\"filled\"></TextField>\r\n                            <Divider></Divider>\r\n                            <InputLabel htmlFor=\"state-select\">State</InputLabel>\r\n                            <Select\r\n                                native\r\n                                inputProps={{\r\n                                    name: 'age',\r\n                                    id: 'state-select',\r\n                                }}\r\n                            >\r\n                                <option value=\"To Do\">To Do</option>\r\n                                <option value=\"In Progress\">In Progress</option>\r\n                                <option value=\"Ready\">Ready</option>\r\n                            </Select>\r\n                            <Divider></Divider>\r\n                            <Button type=\"submit\">Done</Button>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TaskCreator;","import React from 'react';\r\nimport './TaskCard.css'\r\nimport { Card } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport \"./Tasks.css\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport PlayCircleFilledWhiteIcon from '@material-ui/icons/PlayCircleFilledWhite';\r\n\r\n\r\nclass TaskCard extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Card className=\"mainCard\">\r\n                    <div className=\"container\">\r\n                        <CardContent className=\"content\">\r\n                            <Typography color=\"textPrimary\" gutterBottom>\r\n                                {this.props.task.description}\r\n                            </Typography>\r\n\r\n                            <Typography color=\"textSecondary\" gutterBottom>\r\n                                {this.props.task.status}\r\n                            </Typography>\r\n\r\n                            <Typography color=\"textSecondary\" gutterBottom>\r\n                                {this.props.task.responsible.name}\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\" gutterBottom>\r\n                                {new Date(this.props.task.duaDate).toString()}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </div>\r\n                    {this.props.task.status === \"To Do\" ? <ErrorIcon/> : this.props.task.status === \"Ready\" ? <CheckIcon/> : <PlayCircleFilledWhiteIcon/>}\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TaskCard;","import React from 'react';\r\nimport { Avatar, AvatarListItem, Button, Card, CardContent, Drawer, Grid, IconButton, ListItem, withStyles } from '@material-ui/core';\r\nimport TaskCard from './TaskCard';\r\nimport LoginPhoto from \"../images/tasklogo.png\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = (theme) => ({\r\n\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n      },\r\n});\r\n\r\nclass LeftDrawer extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.close = this.close.bind(this);\r\n    }\r\n\r\n    close(e) {\r\n        console.log(e)\r\n        console.log(this.props.toggleDrawer)\r\n        this.props.toggleDrawer(false)(e);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n\r\n                <React.Fragment>\r\n                    <Drawer open={this.props.open} onClose={this.close}>\r\n                        <Card className=\"userSection\">\r\n                            <CardContent>\r\n                                <Grid>\r\n\r\n                                    <Avatar alt=\"David Vasquez\" src={LoginPhoto} />\r\n                                    <IconButton onClick={this.close}>\r\n                                        <ChevronLeftIcon />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <div style={{ position: 'absolute', top: '90vh', margin: \"auto\" }}>\r\n                            <ListItem>\r\n                                <Link to=\"/\">\r\n                                    <Button type=\"button\">\r\n                                        <Avatar className={classes.large}>\r\n                                            <ExitToAppIcon style={{ color: 'black' }} />\r\n                                        </Avatar>\r\n                                        Log out\r\n                                    </Button>\r\n                                </Link>\r\n                            </ListItem>\r\n                        </div>\r\n                    </Drawer>\r\n                </React.Fragment>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(LeftDrawer);","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { Avatar, Card, CardHeader, CssBaseline, Fab, Grid, Dialog, DialogTitle, TextField, Divider, DialogContent, InputLabel } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport \"./Tasks.css\"\r\n\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TaskCreator from './TaskCreator';\r\nimport TaskCard from './TaskCard';\r\nimport LeftDrawer from './LeftDrawer';\r\n\r\n\r\nclass Tasks extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { drawerOpen: false, dialogOpen: false, tasks: [] };\r\n        this.toggleDrawer = this.toggleDrawer.bind(this);\r\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\r\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\r\n        this.handleTaskSubmit = this.handleTaskSubmit.bind(this);\r\n        this.handleDialogClose = this.handleDialogClose.bind(this);\r\n    }\r\n\r\n    toggleDrawer = (open) => (event) => {\r\n        console.log(open);\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ drawerOpen: open });\r\n    };\r\n\r\n    handleDrawerOpen() {\r\n        this.setState({ drawerOpen: true });\r\n    };\r\n\r\n    handleDrawerClose() {\r\n        this.setState({ drawerOpen: false });\r\n    };\r\n\r\n    handleTaskSubmit = (event) => {\r\n        event.preventDefault();\r\n        let newTask = {\r\n            description: event.target[0].value,\r\n            responsible: {\r\n                name: event.target[1].value,\r\n                email: event.target[2].value\r\n            },\r\n            status: event.target[3].value,\r\n            dueDate: Date.now()\r\n\r\n        }\r\n        this.setState(prevState => {\r\n            const tasks = prevState.tasks.concat(newTask)\r\n            return {\r\n                tasks\r\n            }\r\n        });\r\n        console.log(this.state.tasks);\r\n    }\r\n\r\n    handleDialogClose() {\r\n        this.setState({ dialogOpen: false });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.tasks)\r\n        const taskList = this.state.tasks.map((task, i) => {\r\n            return (\r\n                <TaskCard key={i} task={task} />\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <CssBaseline />\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={this.handleDrawerOpen}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\">\r\n                            Task Planner\r\n                        </Typography>\r\n                    </Toolbar>\r\n\r\n\r\n                </AppBar>\r\n\r\n                <div className=\"pageContent\">\r\n\r\n                    {taskList}\r\n\r\n                    <div className=\"addIcon\">\r\n                        <Fab onClick={() => { this.setState({ dialogOpen: true }) }} aria-label=\"Add Task\">\r\n                            <AddIcon />\r\n                        </Fab>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <TaskCreator\r\n                    handleTaskSubmit={this.handleTaskSubmit}\r\n                    open={this.state.dialogOpen}\r\n                    onClose={this.handleDialogClose}>\r\n                </TaskCreator>\r\n\r\n                <LeftDrawer open={this.state.drawerOpen} toggleDrawer={this.toggleDrawer}></LeftDrawer>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Tasks;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Login from './users/Login.js';\nimport Tasks from './tasks/Tasks.js'\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nconst LoginView = () => (\n  <Login />\n);\n\nconst TasksView = () => (\n  <Tasks />\n);\n\nclass App extends React.Component {\n\n\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n\n          <Switch>\n            <Route exact path=\"/\" component={LoginView} />\n            <Route exact path=\"/tasks\" component={TasksView} />\n          </Switch>\n\n        </Router>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    console.log(process.env.NODE_ENV);\r\n    if ('serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n      console.log(\"AHHH\");\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        \r\n        const contentType = response.headers.get('content-type');\r\n        console.log(contentType);\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          console.log(\"NOT FOUND\");\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          console.log(\"FOUND\");\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\nserviceWorker.register();\n"],"sourceRoot":""}